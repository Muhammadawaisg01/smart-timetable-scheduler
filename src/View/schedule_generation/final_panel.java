/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View.schedule_generation;

import Controller.NewAlgorithm;
import Model.Program;
import Model.Queries;
import Model.Reset;
import static View.Alerts.alert;
import static db.DBConnection.createConnection;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author muhammad awais 1
 */
public class final_panel extends javax.swing.JPanel {

    /**
     * Creates new form final_panel
     */
    public final_panel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        generate_schedule = new javax.swing.JButton();
        jLabel102 = new javax.swing.JLabel();
        jLabel103 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(50, 50, 50));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        generate_schedule.setBackground(new java.awt.Color(0, 102, 153));
        generate_schedule.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        generate_schedule.setForeground(new java.awt.Color(255, 255, 255));
        generate_schedule.setText("Generate Schedule");
        generate_schedule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generate_scheduleActionPerformed(evt);
            }
        });
        add(generate_schedule, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 230, 360, 80));

        jLabel102.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel102.setForeground(new java.awt.Color(255, 255, 255));
        jLabel102.setText("G e n e r a t e  T i m e t a b l e");
        add(jLabel102, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 80, 360, 40));

        jLabel103.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel103.setForeground(new java.awt.Color(0, 102, 153));
        add(jLabel103, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 30, 210, 40));
    }// </editor-fold>//GEN-END:initComponents

    private void generate_scheduleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generate_scheduleActionPerformed
        boolean generated = Reset.scheduleGenerated();
        if (generated) {
            int choice = JOptionPane.showConfirmDialog(null, "Schedule Already Generated. Want to generate new schedule?");
            if (choice == 0) {
                JOptionPane.showMessageDialog(null, "Generating schedule might take a while. Be patient");
                Reset.resetSchedule();
                alert("Generating Sections Schedule");
                Queries.assignLabs();
                ArrayList<Program> programs1 = NewAlgorithm.algorithm_based_on_randomization();
                Queries.updateSchedule(programs1);
                alert("Generating Professors Schedule");
                Queries.mapSectinoSchedule_ToProfessors();
                alert("Generating Students Schedule");
                Queries.mapSectionSchedule_ToStudents();
                JOptionPane.showMessageDialog(null, "Schedule Generated Successfully!");
                Reset.generateSchedule(1);
            } else {
                alert("Schedule not generated");
            }
        } else {
            int choice = JOptionPane.showConfirmDialog(null, "Make sure you added all data of entities. Entities added or modified after this won't effect schedule");

            if (choice == 0) {
                JOptionPane.showMessageDialog(null, "Generating schedule might take a while. Be patient");
                Reset.resetSchedule();
                alert("Generating Sections Schedule");
                Queries.assignLabs();
                ArrayList<Program> programs1 = NewAlgorithm.algorithm_based_on_randomization();
                Queries.updateSchedule(programs1);
                alert("Generating Professors Schedule");
                Queries.mapSectinoSchedule_ToProfessors();
                alert("Generating Students Schedule");
                Queries.mapSectionSchedule_ToStudents();
                JOptionPane.showMessageDialog(null, "Schedule Generated Successfully!");
                Reset.generateSchedule(1);
            } else {
                alert("Schedule not generated");
            }
        }


    }//GEN-LAST:event_generate_scheduleActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton generate_schedule;
    private javax.swing.JLabel jLabel102;
    private javax.swing.JLabel jLabel103;
    // End of variables declaration//GEN-END:variables
}
